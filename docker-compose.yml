version: "3.8"

services:
  elasticsearch:
    container_name: nss-elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.2.0
    environment:
      - xpack.security.enabled=false
      # TODO: Read https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html#single-node-discovery
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    networks:
      - nss-net
    ports:
      - "9200:9200"

  logstash:
    container_name: nss-logstash
    image: docker.elastic.co/logstash/logstash-oss:8.2.2
    volumes:
      - ./logstash/:/etc/logstash
      - ${LOG_DIRECTORY}:/logs
    command: logstash -f /etc/logstash/logstash.conf
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    ports:
      - "5044:5044"
      - "9600:9600"
    networks:
      - nss-net
    depends_on:
      - elasticsearch
    links:
      - elasticsearch

  kibana:
    depends_on:
      - elasticsearch
    container_name: nss-kibana
    image: docker.elastic.co/kibana/kibana:8.2.0
    environment:
      SERVER_NAME: kibana.local
      ELASTICSEARCH_URL: http://elasticsearch:9200
    networks:
      - nss-net
    ports:
      - "5601:5601"

  # NOTE: In production usually 3 zookeeper instances are used.
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: nss-zookeeper-1
    networks:
      - nss-net
    ports:
      - "2181:2181"

  # TODO: This is a single broker Kafka cluster. Add two to three other brokers in future.
  kafka:
    depends_on:
      - zookeeper
    container_name: nss-kafka-1
    image: wurstmeister/kafka:2.13-2.8.1
    networks:
      - nss-net
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 666
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_CREATE_TOPICS: "NSS_TEST_TOPIC:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  redis:
    image: redis:7.0.0
    container_name: nss-redis
    networks:
      - nss-net
    ports:
      - "6379:6397"

  db:
    image: postgres:14-alpine
    restart: always
    container_name: nss-db
    hostname: postgres
    networks:
      - nss-net
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: nss
      POSTGRES_USER: nss
      POSTGRES_PASSWORD: nss
    volumes:
      - db-data:/var/lib/postgresql/data

networks:
  nss-net:
    driver: bridge

volumes:
  db-data:
    driver: local
